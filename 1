#include <stdio.h>
#include <stdlib.h>

struct node{
	int data;
	struct node* next;
};

int main(void) {
	int selected=0;
	struct node* head = NULL;
	while (selected!=4){
		puts("1 - Uj elem hozzaadasa ");
		puts("2 - N. elem torlese ");
		puts("3 - Listazas ");
		puts("4 - Kilepes ");
		scanf("%d",&selected);

		if(selected==1){
			struct node* newnode = (struct node*)malloc(sizeof(struct node));
			scanf("%d",&newnode->data);
			newnode->next=head;
			head=newnode;
		}else if(selected==2){
			int s;
			scanf("%d",&s);
			struct node* tmp=head;
			if(s==0){
				head=head->next;
				free(tmp);
			}else{
				struct node* pre = head;
				tmp=head->next;
				for(;s!=1;s--, tmp=tmp->next, pre=pre->next);
				pre->next=tmp->next;
				free(tmp);
			}
		}else if(selected==3){
			struct node* tmp=head;
			for(;tmp->next!=NULL;tmp=tmp->next)
				printf("%d ",tmp->data);
			printf("%d\n",tmp->data);
		}
	}

	struct node* pre=head;
	struct node* tmp=head;
	for(;tmp->next!=NULL;tmp=tmp->next, free(pre), pre=tmp);
	free(tmp);

	return EXIT_SUCCESS;
}


			//kereses
			/*
			struct node* tmp=head;
			for(;tmp->data!=4;tmp=tmp->next);		//elszall ha ures a lista vagy nincs benne 4-es
			*/

			//torles					//ures lista -- hiba
			/*if(head->data==4){			//elso elemet toroljuk
				struct node* tmp = head;
				head=head->next;
				free(tmp);
			}else{
				struct node* tmp;			//elso elemet nem tudja torolni elagazas nelkul
				struct node* pre;
				pre = head;
				tmp = head->next;
				for(;tmp->data!=4;tmp=tmp->next, pre=pre->next);
				pre->next=tmp->next;
				free(tmp);
			}
			*/
